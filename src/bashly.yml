name: bash-tunnels
help: A simple bash application to manage and create SSH tunnels in a remote VPS.
version: 0.1.0

commands:
- name: add_vps
  alias: av
  help: Add a new VPS

  flags:
  - long: --vps_name
    short: -n
    arg: vps_name
    help: A unique name for the VPS (e.g., my_vps)

  - long: --vps_ip
    short: -i
    arg: vps_ip
    help: The IP address to login at your VPS

  - long: --vps_user
    short: -u
    arg: vps_user
    help: The user to login at your VPS

  - long: --ssh_port
    short: -p
    arg: ssh_port
    help: The port to login at your VPS
  

  examples:
  - bash-tunnels --vps_name=my_vps --vps_ip=127.0.0.1 --vps_user=root --ssh_port=22 
  - bash-tunnels  #Runs the interactive mode
  - bash-tunnels -n=my_vps -i=127.0.0.1 -u=root -p=22 

- name: list_vps
  alias: lv
  help: List all the available VPSs

  examples:
  - bash-tunnels l
  - bash-tunnels list_vps

- name: add_tunnel
  alias: at
  help: Add a new tunnel into an existing VPS

  flags:
  - long: --vps_name
    short: -n
    arg: vps_name
    help: The VPS name to connect the tunnel

  - long: --local_port
    short: -l
    arg: local_port
    help: The local port. This should be the port where your service is running locally
  
  - long: --remote_port
    short: -r
    arg: remote_port
    help: The remote port. This should be the port where your service will be accessible on the VPS

  - long: --tunnel_title
    short: -t
    arg: tunnel_title
    help: The tunnel title. This helps to identify the tunnel later.
  

  examples:
  - bash-tunnels add_tunnel --vps_name=my_vps --local_port=3000 --remote_port=3000
  - bash-tunnels at
  - bash-tunnels add_tunnel -n=my_vps -l=3000 -r=3000

- name: list_tunnels
  alias: lt
  help: List all tunnels created by bash-tunnel

  examples:
  - bash-tunnels lt
  - bash-tunnels list_tunnels

- name: status_tunnel
  alias: st
  help: Check the status of a specific tunnel

  flags:
  - long: --tunnel_title
    short: -t
    arg: tunnel_title
    help: The tunnel title. You can get it using the list_tunnels command

  examples:
  - bash-tunnels st -t=bash-tunnels-my_vps
  - bash-tunnels status_tunnel --tunnel_title=bash-tunnels-my_vps

- name: show_key
  alias: sk
  help: Shows the public SSH key and instructions on how to add it on the remote VPS.

  examples:
  - bash-tunnels sk
  - bash-tunnels show_key

- name: purge_vps
  alias: pv
  help: Purge one VPS from your VPS file.

  flags:
  - long: --vps_name
    short: -n
    arg: vps_name
    help: The VPS name. You can get it using the list_vps command


  - long: --all
    short: -a
    help: Remove all your VPSs from the VPS file. Be careful when using this command.

  examples:
  - bash-tunnels pv my_vps
  - bash-tunnels purge_vps --all

- name: purge_tunnel
  alias: pt
  help: Completely remove a bash-tunnel from your system

  flags:
  - long: --tunnel_title
    short: -t
    arg: tunnel_title
    help: The tunnel title. You can get it using the list_tunnels command

  - long: --all
    short: -a
    help: Disable and remove all your tunnels created with bash-tunnels. Be careful when using this command.

  examples:
  - bash-tunnels pt
  - bash-tunnels purge_tunnel --all

- name: backup
  alias: bk
  help: Create a full bash-tunnels backup including all tunnels and ssh key

  examples:
  - bash-tunnels bk
  - bash-tunnels backup

- name: restore
  alias: rt
  help: Completely restore a bash-tunnels backup including all tunnels and ssh key

  flags:
  - long: --backup_file
    short: -f
    arg: backup_file
    help: The backup file. It must be a zip file.

  - long: --clean
    short: -c
    help: Purges any existing bash-tunnels file before restoring the backup

  examples:
  - bash-tunnels rt
  - bash-tunnels restore

- name: uninstall
  alias: un
  help: Completely remove bash-tunnels from your system including all tunnels and ssh key

  examples:
  - bash-tunnels un
  - bash-tunnels uninstall